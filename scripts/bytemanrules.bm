RULE AssociationImpl_invokeMethod_ENTRY
CLASS org.jboss.as.ejb3.remote.AssociationImpl
METHOD invokeMethod
AT ENTRY
IF TRUE
DO
traceOpen("callTrace","/tmp/timestamp.log");
traceln("callTrace",""+Thread.currentThread().getId()+":EJB3:AssociationImpl.invokeMethod:ENTRY:"+System.nanoTime())
ENDRULE

RULE AssociationImpl_invokeMethod_EXIT
CLASS org.jboss.as.ejb3.remote.AssociationImpl
METHOD invokeMethod
AT EXIT
IF TRUE
DO
traceOpen("callTrace","/tmp/timestamp.log");
traceln("callTrace",""+Thread.currentThread().getId()+":EJB3:AssociationImpl.invokeMethod:EXIT:"+System.nanoTime())
ENDRULE

RULE ManagedReferenceMethodInterceptor_processInvocation_ENTRY
CLASS org.jboss.as.ee.component.ManagedReferenceMethodInterceptor
METHOD processInvocation
AT ENTRY
IF TRUE
DO
traceOpen("callTrace","/tmp/timestamp.log");
traceln("callTrace",""+Thread.currentThread().getId()+":EJB3:ManagedReferenceMethodInterceptor.processInvocation:ENTRY:"+System.nanoTime())
ENDRULE

RULE ManagedReferenceMethodInterceptor_processInvocation_EXIT
CLASS org.jboss.as.ee.component.ManagedReferenceMethodInterceptor
METHOD processInvocation
AT EXIT
IF TRUE
DO
traceOpen("callTrace","/tmp/timestamp.log");
traceln("callTrace",""+Thread.currentThread().getId()+":EJB3:ManagedReferenceMethodInterceptor.processInvocation:EXIT:"+System.nanoTime())
ENDRULE

RULE SharedSessionContractImplementor_executeNativeUpdate_ENTRY
INTERFACE org.hibernate.engine.spi.SharedSessionContractImplementor
METHOD executeNativeUpdate
AT ENTRY
IF TRUE
DO
traceOpen("callTrace","/tmp/timestamp.log");
traceln("callTrace",""+Thread.currentThread().getId()+":HHH:SharedSessionContractImplementor.executeNativeUpdate:ENTRY:"+System.nanoTime())
ENDRULE

RULE SharedSessionContractImplementor_executeNativeUpdate_EXIT
INTERFACE org.hibernate.engine.spi.SharedSessionContractImplementor
METHOD executeNativeUpdate
AT EXIT
IF TRUE
DO
traceOpen("callTrace","/tmp/timestamp.log");
traceln("callTrace",""+Thread.currentThread().getId()+":HHH:SharedSessionContractImplementor.executeNativeUpdate:EXIT:"+System.nanoTime())
ENDRULE

RULE SharedSessionContractImplementor_executeUpdate_ENTRY
INTERFACE org.hibernate.engine.spi.SharedSessionContractImplementor
METHOD executeUpdate
AT ENTRY
IF TRUE
DO
traceOpen("callTrace","/tmp/timestamp.log");
traceln("callTrace",""+Thread.currentThread().getId()+":HHH:SharedSessionContractImplementor.executeUpdate:ENTRY:"+System.nanoTime())
ENDRULE

RULE SharedSessionContractImplementor_executeUpdate_EXIT
INTERFACE org.hibernate.engine.spi.SharedSessionContractImplementor
METHOD executeUpdate
AT EXIT
IF TRUE
DO
traceOpen("callTrace","/tmp/timestamp.log");
traceln("callTrace",""+Thread.currentThread().getId()+":HHH:SharedSessionContractImplementor.executeUpdate:EXIT:"+System.nanoTime())
ENDRULE

RULE SharedSessionContractImplementor_flush_ENTRY
INTERFACE org.hibernate.engine.spi.SharedSessionContractImplementor
METHOD flush
AT ENTRY
IF TRUE
DO
traceOpen("callTrace","/tmp/timestamp.log");
traceln("callTrace",""+Thread.currentThread().getId()+":HHH:SharedSessionContractImplementor.flush:ENTRY:"+System.nanoTime())
ENDRULE

RULE SharedSessionContractImplementor_flush_EXIT
INTERFACE org.hibernate.engine.spi.SharedSessionContractImplementor
METHOD flush
AT EXIT
IF TRUE
DO
traceOpen("callTrace","/tmp/timestamp.log");
traceln("callTrace",""+Thread.currentThread().getId()+":HHH:SharedSessionContractImplementor.flush:EXIT:"+System.nanoTime())
ENDRULE

RULE SharedSessionContractImplementor_immediateLoad_ENTRY
INTERFACE org.hibernate.engine.spi.SharedSessionContractImplementor
METHOD immediateLoad
AT ENTRY
IF TRUE
DO
traceOpen("callTrace","/tmp/timestamp.log");
traceln("callTrace",""+Thread.currentThread().getId()+":HHH:SharedSessionContractImplementor.immediateLoad:ENTRY:"+System.nanoTime())
ENDRULE

RULE SharedSessionContractImplementor_immediateLoad_EXIT
INTERFACE org.hibernate.engine.spi.SharedSessionContractImplementor
METHOD immediateLoad
AT EXIT
IF TRUE
DO
traceOpen("callTrace","/tmp/timestamp.log");
traceln("callTrace",""+Thread.currentThread().getId()+":HHH:SharedSessionContractImplementor.immediateLoad:EXIT:"+System.nanoTime())
ENDRULE

RULE SharedSessionContractImplementor_initializeCollection_ENTRY
INTERFACE org.hibernate.engine.spi.SharedSessionContractImplementor
METHOD initializeCollection
AT ENTRY
IF TRUE
DO
traceOpen("callTrace","/tmp/timestamp.log");
traceln("callTrace",""+Thread.currentThread().getId()+":HHH:SharedSessionContractImplementor.initializeCollection:ENTRY:"+System.nanoTime())
ENDRULE

RULE SharedSessionContractImplementor_initializeCollection_EXIT
INTERFACE org.hibernate.engine.spi.SharedSessionContractImplementor
METHOD initializeCollection
AT EXIT
IF TRUE
DO
traceOpen("callTrace","/tmp/timestamp.log");
traceln("callTrace",""+Thread.currentThread().getId()+":HHH:SharedSessionContractImplementor.initializeCollection:EXIT:"+System.nanoTime())
ENDRULE

RULE SharedSessionContractImplementor_iterate_ENTRY
INTERFACE org.hibernate.engine.spi.SharedSessionContractImplementor
METHOD iterate
AT ENTRY
IF TRUE
DO
traceOpen("callTrace","/tmp/timestamp.log");
traceln("callTrace",""+Thread.currentThread().getId()+":HHH:SharedSessionContractImplementor.iterate:ENTRY:"+System.nanoTime())
ENDRULE

RULE SharedSessionContractImplementor_iterate_EXIT
INTERFACE org.hibernate.engine.spi.SharedSessionContractImplementor
METHOD iterate
AT EXIT
IF TRUE
DO
traceOpen("callTrace","/tmp/timestamp.log");
traceln("callTrace",""+Thread.currentThread().getId()+":HHH:SharedSessionContractImplementor.iterate:EXIT:"+System.nanoTime())
ENDRULE

RULE SharedSessionContractImplementor_iterateFilter_ENTRY
INTERFACE org.hibernate.engine.spi.SharedSessionContractImplementor
METHOD iterateFilter
AT ENTRY
IF TRUE
DO
traceOpen("callTrace","/tmp/timestamp.log");
traceln("callTrace",""+Thread.currentThread().getId()+":HHH:SharedSessionContractImplementor.iterateFilter:ENTRY:"+System.nanoTime())
ENDRULE

RULE SharedSessionContractImplementor_iterateFilter_EXIT
INTERFACE org.hibernate.engine.spi.SharedSessionContractImplementor
METHOD iterateFilter
AT EXIT
IF TRUE
DO
traceOpen("callTrace","/tmp/timestamp.log");
traceln("callTrace",""+Thread.currentThread().getId()+":HHH:SharedSessionContractImplementor.iterateFilter:EXIT:"+System.nanoTime())
ENDRULE

RULE SharedSessionContractImplementor_list_ENTRY
INTERFACE org.hibernate.engine.spi.SharedSessionContractImplementor
METHOD list
AT ENTRY
IF TRUE
DO
traceOpen("callTrace","/tmp/timestamp.log");
traceln("callTrace",""+Thread.currentThread().getId()+":HHH:SharedSessionContractImplementor.list:ENTRY:"+System.nanoTime())
ENDRULE

RULE SharedSessionContractImplementor_list_EXIT
INTERFACE org.hibernate.engine.spi.SharedSessionContractImplementor
METHOD list
AT EXIT
IF TRUE
DO
traceOpen("callTrace","/tmp/timestamp.log");
traceln("callTrace",""+Thread.currentThread().getId()+":HHH:SharedSessionContractImplementor.list:EXIT:"+System.nanoTime())
ENDRULE

RULE SharedSessionContractImplementor_listCustomQuery_ENTRY
INTERFACE org.hibernate.engine.spi.SharedSessionContractImplementor
METHOD listCustomQuery
AT ENTRY
IF TRUE
DO
traceOpen("callTrace","/tmp/timestamp.log");
traceln("callTrace",""+Thread.currentThread().getId()+":HHH:SharedSessionContractImplementor.listCustomQuery:ENTRY:"+System.nanoTime())
ENDRULE

RULE SharedSessionContractImplementor_listCustomQuery_EXIT
INTERFACE org.hibernate.engine.spi.SharedSessionContractImplementor
METHOD listCustomQuery
AT EXIT
IF TRUE
DO
traceOpen("callTrace","/tmp/timestamp.log");
traceln("callTrace",""+Thread.currentThread().getId()+":HHH:SharedSessionContractImplementor.listCustomQuery:EXIT:"+System.nanoTime())
ENDRULE

RULE SharedSessionContractImplementor_listFilter_ENTRY
INTERFACE org.hibernate.engine.spi.SharedSessionContractImplementor
METHOD listFilter
AT ENTRY
IF TRUE
DO
traceOpen("callTrace","/tmp/timestamp.log");
traceln("callTrace",""+Thread.currentThread().getId()+":HHH:SharedSessionContractImplementor.listFilter:ENTRY:"+System.nanoTime())
ENDRULE

RULE SharedSessionContractImplementor_listFilter_EXIT
INTERFACE org.hibernate.engine.spi.SharedSessionContractImplementor
METHOD listFilter
AT EXIT
IF TRUE
DO
traceOpen("callTrace","/tmp/timestamp.log");
traceln("callTrace",""+Thread.currentThread().getId()+":HHH:SharedSessionContractImplementor.listFilter:EXIT:"+System.nanoTime())
ENDRULE

RULE SharedSessionContractImplementor_scroll_ENTRY
INTERFACE org.hibernate.engine.spi.SharedSessionContractImplementor
METHOD scroll
AT ENTRY
IF TRUE
DO
traceOpen("callTrace","/tmp/timestamp.log");
traceln("callTrace",""+Thread.currentThread().getId()+":HHH:SharedSessionContractImplementor.scroll:ENTRY:"+System.nanoTime())
ENDRULE

RULE SharedSessionContractImplementor_scroll_EXIT
INTERFACE org.hibernate.engine.spi.SharedSessionContractImplementor
METHOD scroll
AT EXIT
IF TRUE
DO
traceOpen("callTrace","/tmp/timestamp.log");
traceln("callTrace",""+Thread.currentThread().getId()+":HHH:SharedSessionContractImplementor.scroll:EXIT:"+System.nanoTime())
ENDRULE

RULE SharedSessionContractImplementor_scrollCustomQuery_ENTRY
INTERFACE org.hibernate.engine.spi.SharedSessionContractImplementor
METHOD scrollCustomQuery
AT ENTRY
IF TRUE
DO
traceOpen("callTrace","/tmp/timestamp.log");
traceln("callTrace",""+Thread.currentThread().getId()+":HHH:SharedSessionContractImplementor.scrollCustomQuery:ENTRY:"+System.nanoTime())
ENDRULE

RULE SharedSessionContractImplementor_scrollCustomQuery_EXIT
INTERFACE org.hibernate.engine.spi.SharedSessionContractImplementor
METHOD scrollCustomQuery
AT EXIT
IF TRUE
DO
traceOpen("callTrace","/tmp/timestamp.log");
traceln("callTrace",""+Thread.currentThread().getId()+":HHH:SharedSessionContractImplementor.scrollCustomQuery:EXIT:"+System.nanoTime())
ENDRULE

RULE ApplicationServerService_start_ENTRY
CLASS org.jboss.as.server.ApplicationServerService
METHOD start
AT ENTRY
IF TRUE
DO
traceOpen("callTrace","/tmp/timestamp.log");
traceln("callTrace",""+Thread.currentThread().getId()+":JBOSSAS:ApplicationServerService.start:ENTRY:"+System.nanoTime())
ENDRULE

RULE ApplicationServerService_start_EXIT
CLASS org.jboss.as.server.ApplicationServerService
METHOD start
AT EXIT
IF TRUE
DO
traceOpen("callTrace","/tmp/timestamp.log");
traceln("callTrace",""+Thread.currentThread().getId()+":JBOSSAS:ApplicationServerService.start:EXIT:"+System.nanoTime())
ENDRULE

RULE WrappedStatement_execute_ENTRY
CLASS ^org.jboss.jca.adapters.jdbc.WrappedStatement
METHOD execute
AT ENTRY
IF TRUE
DO
traceOpen("callTrace","/tmp/timestamp.log");
traceln("callTrace",""+Thread.currentThread().getId()+":JCA:WrappedStatement.execute:ENTRY:"+System.nanoTime())
ENDRULE

RULE WrappedStatement_execute_EXIT
CLASS ^org.jboss.jca.adapters.jdbc.WrappedStatement
METHOD execute
AT EXIT
IF TRUE
DO
traceOpen("callTrace","/tmp/timestamp.log");
traceln("callTrace",""+Thread.currentThread().getId()+":JCA:WrappedStatement.execute:EXIT:"+System.nanoTime())
ENDRULE

RULE WrappedStatement_executeQuery_ENTRY
CLASS ^org.jboss.jca.adapters.jdbc.WrappedStatement
METHOD executeQuery
AT ENTRY
IF TRUE
DO
traceOpen("callTrace","/tmp/timestamp.log");
traceln("callTrace",""+Thread.currentThread().getId()+":JCA:WrappedStatement.executeQuery:ENTRY:"+System.nanoTime())
ENDRULE

RULE WrappedStatement_executeQuery_EXIT
CLASS ^org.jboss.jca.adapters.jdbc.WrappedStatement
METHOD executeQuery
AT EXIT
IF TRUE
DO
traceOpen("callTrace","/tmp/timestamp.log");
traceln("callTrace",""+Thread.currentThread().getId()+":JCA:WrappedStatement.executeQuery:EXIT:"+System.nanoTime())
ENDRULE
